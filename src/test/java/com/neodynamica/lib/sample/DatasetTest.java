package com.neodynamica.lib.sample;

import com.neodynamica.lib.sample.io.CSVParser;

import org.junit.jupiter.api.Test;

import java.io.IOException;
import java.util.Arrays;
import static org.junit.jupiter.api.Assertions.*;

class DatasetTest {

    private final String TEST_CSV = "UnitTestFiles/3cxc+sin(b)-4xa.csv";

    @Test
    void testGettingInputLabels() {
        Dataset dataset = null;
        try {
            dataset = (new CSVParser(",", TEST_CSV)).parse().getDatasetObject();
        } catch (IOException e) {
            e.printStackTrace();
        }

        String[] expectedInputLabels = {"a", "b", "c"};
        String[] testInputLabels = dataset.getInputLabels();

        assertArrayEquals(expectedInputLabels, testInputLabels);

    }

    @Test
    void testGettingOutputLabels() {
        Dataset dataset = null;

        try {
            dataset = (new CSVParser(",", TEST_CSV)).parse().getDatasetObject();
        } catch (IOException e) {
            e.printStackTrace();
        }

        String expectedOutputLabel = "d";
        String testOutputLabel = dataset.getOutputLabel();

        assertEquals(expectedOutputLabel, testOutputLabel);
    }

    @Test
    void testInputValues() {
        Dataset dataset = null;

        try {
            dataset = (new CSVParser(",", TEST_CSV)).parse().getDatasetObject();
        } catch (IOException e) {
            e.printStackTrace();
        }

        Double[][] expectedInputValues = {
                {4.0,0.6,1.0}, {1.4,8.5,4.0}, {6.3,8.3,7.0}, {3.7,3.0,32.0}, {2.7,7.6,2.12}, {1.6,9.7,0.5}, {2.1,2.6,64.0},
                {9.1,6.0,12.0}, {7.4,1.7,13.0}, {0.6,3.6,14.5}, {4.7,7.0,20.7}, {0.6,6.9,9.8}, {9.2,5.9,3.4}, {4.5,2.0,3.14},
                {2.8,0.4,12.9}, {8.1,10.0,25.8}, {6.5,5.9,30.0}, {6.8,0.2,7.9}, {5.9,7.5,6.4}, {6.7,6.8,51.0}, {0.9,2.3,6.0},
                {8.2,1.8,54.0}, {3.8,3.4,2.0}, {9.6,6.3,56.0}, {0.8,9.8,2.0}, {7.6,0.5,4.0}, {4.0,0.6,9.0}, {1.4,8.5,6.0},
                {6.3,8.3,3.0}, {3.7,3.0,0.9}, {2.7,7.6,0.65}, {1.6,9.7,0.36}, {2.1,2.6,3.56}, {9.1,6.0,4.21}, {7.4,1.7,6.32},
                {0.6,3.6,10.0}, {4.7,7.0,10.35}, {0.6,6.9,0.21}, {9.2,5.9,2.64}, {4.5,2.0,6.26}, {2.8,0.4,4.75}, {8.1,10.0,9.17},
                {6.5,5.9,3.48}, {6.8,0.2,8.93}, {5.9,7.5,2.21}, {6.7,6.8,3.49}, {0.9,2.3,6.4}, {8.2,1.8,5.0}, {3.8,3.4,6.47},
                {9.6,6.3,7.61}, {0.8,9.8,7.99}, {7.6,0.5,7.33}, {4.0,0.6,2.6}, {1.4,8.5,3.84}, {6.3,8.3,0.04}, {3.7,3.0,7.22}, {2.7,7.6,6.2},
                {1.6,9.7,6.2}, {2.1,2.6,1.9}, {9.1,6.0,4.3}, {7.4,1.7,6.54}, {0.6,3.6,0.75}, {4.7,7.0,3.44}, {0.6,6.9,2.3}, {9.2,5.9,0.63},
                {4.5,2.0,4.86}, {2.8,0.4,7.67}, {8.1,10.0,1.95}, {6.5,5.9,3.08}, {6.8,0.2,3.85}, {5.9,7.5,4.98}, {6.7,6.8,3.64}, {0.9,2.3,4.08},
                {8.2,1.8,5.41}, {3.8,3.4,1.23}, {9.6,6.3,8.01}, {0.8,9.8,2.5}, {7.6,0.5,3.69}, {4.0,0.6,2.77}, {1.4,8.5,2.24}, {6.3,8.3,1.66},
                {3.7,3.0,5.29}, {2.7,7.6,4.88}, {1.6,9.7,3.49}, {2.1,2.6,3.23}, {9.1,6.0,8.74}, {7.4,1.7,4.33}, {0.6,3.6,8.54}, {4.7,7.0,8.24},
                {0.6,6.9,7.6}, {9.2,5.9,2.89}, {4.5,2.0,0.5}, {2.8,0.4,5.32}, {8.1,10.0,4.79}, {6.5,5.9,6.33}, {6.8,0.2,9.43}, {5.9,7.5,2.9},
                {6.7,6.8,2.52}, {0.9,2.3,2.53}, {8.2,1.8,3.23}, {3.8,3.4,6.35}, {9.6,6.3,7.63}, {0.8,9.8,3.18}, {7.6,0.5,9.63}, {4.0,0.6,0.87},
                {1.4,8.5,7.22}, {6.3,8.3,5.69}, {3.7,3.0,7.64}, {2.7,7.6,8.07}, {1.6,9.7,2.79}, {2.1,2.6,6.1}, {9.1,6.0,9.21}, {7.4,1.7,7.54},
                {0.6,3.6,4.46}, {4.7,7.0,8.82}, {0.6,6.9,7.9}, {9.2,5.9,4.55}, {4.5,2.0,8.44}, {2.8,0.4,6.47}, {8.1,10.0,32.0}, {6.5,5.9,26.0},
                {6.8,0.2,44.0}
        };

        Double[][] testInputValues = dataset.getInputValues();

        assertArrayEquals(expectedInputValues, testInputValues);


    }

    @Test
    void testOutputValues() {

        Dataset dataset = null;

        try {
            dataset = (new CSVParser(",", TEST_CSV)).parse().getDatasetObject();
        } catch (IOException e) {
            e.printStackTrace();
        }

        Double[] expectedOutputValues = {
                -12.43535753, 43.19848711, 122.7021718, 3057.34112, 3.651119672, -5.921760626, 12280.1155, 395.3205845,
                478.3916648, 627.9074796, 1267.326987, 286.2984398, -2.493876665, 12.48809743, 488.4194183, 1963.975979,
                2673.626123, 160.2286693, 100.218, 7776.694113, 105.1457052, 8716.173848, -3.455541102, 9369.616814,
                8.433520871, 18.07942554, 227.5646425, 103.1984871, 2.702171834, -12.22887999, -8.564580328, -6.282960626,
                30.13630137, 16.4928845, 91.21886481, 297.1574796, 303.2244866, -1.689260236, -16.26507666, 100.4720974,
                56.87691834, 219.3226789, 9.957323335, 212.2333693, -8.009700023, 10.23441335, 120.0257052, 43.17384763,
                110.1271589, 135.3531139, 187.9538209, 131.2661255, 4.844642473, 39.43528711, -24.29302817, 141.72632,
                105.4879197, 108.6482394, 2.945501372, 18.7905845, 99.70646481, -1.155020443, 17.3577866, 14.04843976,
                -35.98317666, 53.76809743, 165.6761183, -21.53652111, 2.085323335, 17.46616933, 51.73919998, 13.44291335,
                47.08490521, 55.97814763, -10.9168411, 154.0971139, 15.18352087, 10.92772554, 7.583342473, 10.25128711,
                -16.03102817, 69.29342001, 61.61111967, 29.86853937, 23.41420137, 192.4833845, 27.63836481, 215.9522796,
                185.5497866, 171.4584398, -12.11757666, -16.34070257, 74.09661834, 35.88827889, 93.83282334, 239.7733693,
                2.567999977, -7.254686649, 16.34840521, -0.527452369, 105.5119589, 136.2675139, 26.77072087, 248.2901255,
                -13.16465753, 151.5836871, 72.83047183, 160.44992, 185.5426197, 16.68053937, 103.7455014, 217.7928845,
                141.9464648, 56.83227956, 215.2341866, 185.4084398, 24.93362334, 196.6100974, 114.7721183, 3039.055979,
                2001.626123, 5780.998669};

        Double[] testOutputValues = dataset.getOutputValues();

        assertArrayEquals(expectedOutputValues, testOutputValues);

    }



}