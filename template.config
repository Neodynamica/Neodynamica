#Neodynamica search parameters file
#You can save custom search parameters here to quickly load all for future symbolic regression searches
#Each parameter has a DEFAULT value if you choose not to specify it here (except dataFilePath)
#   either by deleting/commenting (with a '#') the parameter or leaving it = 'blank' e.g. 'skeleton='
#The SUPPORTED values for each parameter are also shown
#The CLI/GUI can still be used to tweak individual parameters after loading these.

#dataFilePath: Specify the path/filename of your csv 'samples' dataset which will be used for the search
#NO DEFAULT: either specify here or set via UI before running
dataFilePath=datasets/sin_a.csv

#targetColumnIndex: the zero-based index of the column in your dataset containing the 'expected' or 'target' values
#special case: -1 will equal the rightmost column
#SUPPORTED: any integer >= 0 (so long as there is a corresponding column in the dataset)
#DEFAULT: -1 (rightmost column)
targetColumnIndex=

#inputColumnIndices: the zero-based indices of each column which should be considered as a possible variable in the search
#specify each column to include, separated by commas
#SUPPORTED: one or more integers >= 0, separated by commas e.g. 0,1,3,5
#DEFAULT: all columns in dataset except the targetColumnIndex
inputColumnIndices=

#maxGenerations: Number of generations the search will run for
#SUPPORTED: any integer > 0
#DEFAULT: 2000
maxGenerations=

#errorFunction: the error function to be used for evaluating potential solutions in the search
#SUPPORTED: (you can use EITHER the full or abbreviated name for the following)
#    MeanAbsoluteError              / MAE
#    MeanSquaredError               / MSE
#    RootMeanSquaredError           / RMSE
#    R2GoodnessOfFit                / RGF
#    WorstCase                      / WC
#    PearsonsCorrelationCoefficient / PCC
#    MedianAbsoluteError            / MED
#    InterquartileAbsoluteError     / IQAE
#DEFAULT: RMSE
errorFunction=

#operators: the mathematical operators to be included in the search, separated by commas
#SUPPORTED:
#   ADD: adds two values
#   SUB: subtracts two values
#   MUL: multiplies two values
#   DIV: divides one value by another
#   ABS: returns absolute value of a value
#   NEG: negates a value
#   MIN: returns the lower of two values
#   MAX: returns the higher of two values
#   RINT: rounds a decimal to the nearest whole number
#   CEIL: rounds a decimal number up to the next whole number
#   FLOOR: rounds a decimal number down to the next whole number
#   SIGNUM: returns -1 if value < 0, +1 if > 0, or 0 if = 0
#   MOD: returns the modulo of two values
#   POW: raises one value to the power of another
#   SQR: squares a value
#   SQRT: square-roots a value
#   CBRT: cube-roots a value
#   HYPOT: for two values x,y, returns x^2 + y^2
#   EXP: raises Euler's number "e" to the power of a value
#   LOG: natural logarithm (base e) of a value
#   LOG10: logarithm (base 10) of a value
#   SIN: sine of a value
#   COS: cosine of a value
#   TAN: tangent of a value
#   ASIN: arc sine of a value
#   ACOS: arc cosine of a value
#   ATAN: arc tangent of a value
#   SINH: hyperbolic sine of a value
#   COSH: hyperbolic cosine of a value
#   TANH: hyperbolic tangent of a value
#DEFAULT: ADD,SUB,MUL,DIV,SIN,COS,TAN
#NOTE: writing anything here will overwrite the DEFAULTs, not add to them.
operators=

#skeleton: a custom operator forming a partial solution or "skeleton" to be included in the search
#   useful if you already know a piece of the best solution but aren't sure where it fits
#SUPPORTED: a mathematical expression, with words or "?"s in place of unknown values
#e.g. 5*?^2 + (6*?/3)    or      7.1*var1 + var1^2 + ?/3
#DEFAULT: none
skeleton=

#maxSolutionNodes: restricts the maximum number of nodes in a possible solution.
#   Any which grow bigger will be killed and replaced
#SUPPORTED: any integer > 0
#DEFAULT: 100
maxSolutionNodes=

#populationSize: the number of potential solutions being concurrently evolved in each generation
#SUPPORTED: any integer > 0
#DEFAULT: 100
populationSize=

#initialSolutionDepth: the starting population of a search will be randomly generated solutions
#   with this many nodes.
#SUPPORTED: any integer > 0
#DEFAULT: 2
initialSolutionDepth=

#seed: a seed used to instantiate the search's Pseudo-random number generator. If specified, will use
#   a seed, meaning the exact results of this search will be reproducible if all parameters remain the same.
#   However, this restricts the search to run single-threaded, greatly reducing performance.
#
#   Leaving this blank or = 0 allows the search to run much faster using multiple threads,
#   but results won't be reproducible.
#SUPPORTED: any integer except 0
#DEFAULT: no seed
seed=

#multiObjectiveOptimisation: determines if the regression should be run in multi objective mode, optimising error and solution complexity
#SUPPORTED: boolean values 'true' or 'false'
#DEFAULT: false
multiObjectiveOptimisation=

#includeIntegers: Bound for integers to be used as possible leaf node constants
#SUPPORTED: comma separated integers a,b where 0 >= a >= b
#DEFAULT: 0,10
includeIntegers=

#includeDecimals: Bound for decimals to be used as possible leaf node constants
#SUPPORTED: comma separated integers a,b where 0 >= a >= b
#DEFAULT: 0,10
includeDecimals=

#includeDecimalPlaces: Number of decimal places to use for leaf node constants
#SUPPORTED: any integer a where 0 >= a <= 15
#DEFAULT: 2
includeDecimalPlaces=

#offspringFraction: A number to determine the ratio of offspring to survivors at each evolution step
#SUPPORTED: any double a where 0 >= a <= 1
#DEFAULT: 0.6
offspringFraction=

#mutatorProbability: A number to determine probability of mutation
#SUPPORTED: any double a where 0 >= a <= 1
#DEFAULT: 0.01
mutatorProbability=

#crossoverProbability: A number to determine probability of crossover
#SUPPORTED: any double a where 0 >= a <= 1
#DEFAULT: 0.05
crossoverProbability=

#offspringSampleSize: Sample size of the offspring selector
#SUPPORTED: any integer a where a > 1
#DEFAULT: 3
offspringSampleSize=

#survivorsSampleSize: Sample size of the survivors selector
#SUPPORTED: any integer a where a > 1
#DEFAULT: 3
survivorsSampleSize=

#steadyFitnessLimit: Reduces the evolution when fitness remains steady after a set number of generations
#SUPPORTED: any integer a where a > 1
#DEFAULT: 99999
steadyFitnessLimit=

#timeLimit: Limits the evolution to a set time limit
#SUPPORTED: any integer a where a > 1
#DEFAULT: 3600 (1 hour in seconds)
timeLimit=
